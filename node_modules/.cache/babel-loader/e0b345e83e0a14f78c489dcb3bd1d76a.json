{"ast":null,"code":"var _jsxFileName = \"/home/galo/Bureau/GoMyCode/ConsulttionMedicale/myclient/src/component/Liste.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getUsers } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Liste() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const getAllUsers = async () => {\n    let response = await getUsers();\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.row,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: user._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: user.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          style: {\n            marginRight: 10\n          },\n          component: Link,\n          to: `/edit/${user._id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => deleteUserData(user._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Liste, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = Liste;\nexport default Liste;\n/* import axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\n\nfunction Liste() {\n    const [listOfUser,setListOfUser]= useState([])\n    const fetchData= async()=>{\n      const result= await axios.get(\n        'http://localhost:8080/api/all'\n      )\n      setListOfUser(result.data)\n    }\n    useEffect(()=>{\n      fetchData()\n    })\n    const listArray=Object.values(listOfUser)\n    return ( \n        <div className=\"App\">\n         <table>\n          <tbody>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>UserName</th>\n            <th>Email</th>\n            <th>Adresse</th>\n            <th>Phone</th>\n            <th>Website</th>\n            <th>Company</th>\n          </tr>\n        \n            {listArray.map((user, index) => (\n              <tr key={index}>\n                <td><div>{user[index].sexe}</div></td>\n                <td><div>{user[3].nom}</div></td>\n                {console.log()}\n              </tr>\n          \n          ))}\n          </tbody>\n          </table>\n      </div>\n     )\n}\n\nexport default Liste;\n\n\n{listArray.map((user, index)=>(<div key={index}>{user.prenom}</div>))}\n\n user[index].nom */\n\nvar _c;\n\n$RefreshReg$(_c, \"Liste\");","map":{"version":3,"sources":["/home/galo/Bureau/GoMyCode/ConsulttionMedicale/myclient/src/component/Liste.js"],"names":["React","useState","useEffect","getUsers","Liste","users","setUsers","getAllUsers","response","data","map","user","classes","row","_id","name","username","email","phone","marginRight","Link","deleteUserData","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,QAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,QAAIC,QAAQ,GAAG,MAAML,QAAQ,EAA7B;AACAG,IAAAA,QAAQ,CAACE,QAAQ,CAACC,IAAV,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,cACSJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACP,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEC,OAAO,CAACC,GAA7B;AAAA,8BACI,QAAC,SAAD;AAAA,kBAAYF,IAAI,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,oBAEI,QAAC,SAAD;AAAA,kBAAYH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAA,kBAAYJ,IAAI,CAACK;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,SAAD;AAAA,kBAAYL,IAAI,CAACM;AAAjB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,SAAD;AAAA,kBAAYN,IAAI,CAACO;AAAjB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,SAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAC,WAAhC;AAA4C,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAC;AAAb,WAAnD;AAAqE,UAAA,SAAS,EAAEC,IAAhF;AAAsF,UAAA,EAAE,EAAG,SAAQT,IAAI,CAACG,GAAI,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,oBAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAC,WAAlC;AAA8C,UAAA,OAAO,EAAE,MAAMO,cAAc,CAACV,IAAI,CAACG,GAAN,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,OAAuCH,IAAI,CAACW,EAA5C;AAAA;AAAA;AAAA;AAAA,YADH;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA/BQlB,K;;KAAAA,K;AAiCL,eAAeA,KAAf;AAmCJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { getUsers } from \"../api\";\n\nfunction Liste() {\n\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n\n    const getAllUsers = async () => {\n        let response = await getUsers();\n        setUsers(response.data);\n    }\n\n    return ( \n        <div>\n                {users.map((user) => (\n                    <TableRow className={classes.row} key={user.id}>\n                        <TableCell>{user._id}</TableCell> {/* change it to user.id to use JSON Server */}\n                        <TableCell>{user.name}</TableCell>\n                        <TableCell>{user.username}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>{user.phone}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:10}} component={Link} to={`/edit/${user._id}`}>Edit</Button> {/* change it to user.id to use JSON Server */}\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteUserData(user._id)}>Delete</Button> {/* change it to user.id to use JSON Server */}\n                        </TableCell>\n                    </TableRow>\n                ))}\n            \n            </div>\n     )\n}\n\n    export default Liste;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* import axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\n\nfunction Liste() {\n    const [listOfUser,setListOfUser]= useState([])\n    const fetchData= async()=>{\n      const result= await axios.get(\n        'http://localhost:8080/api/all'\n      )\n      setListOfUser(result.data)\n    }\n    useEffect(()=>{\n      fetchData()\n    })\n    const listArray=Object.values(listOfUser)\n    return ( \n        <div className=\"App\">\n         <table>\n          <tbody>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>UserName</th>\n            <th>Email</th>\n            <th>Adresse</th>\n            <th>Phone</th>\n            <th>Website</th>\n            <th>Company</th>\n          </tr>\n        \n            {listArray.map((user, index) => (\n              <tr key={index}>\n                <td><div>{user[index].sexe}</div></td>\n                <td><div>{user[3].nom}</div></td>\n                {console.log()}\n              </tr>\n          \n          ))}\n          </tbody>\n          </table>\n      </div>\n     )\n}\n\nexport default Liste;\n\n\n{listArray.map((user, index)=>(<div key={index}>{user.prenom}</div>))}\n\n user[index].nom */"]},"metadata":{},"sourceType":"module"}